name: "Ghast CI"

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    timeout-minutes: 15

    steps:    
    - name: Checkout repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      with:
        persist-credentials: false
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
        pip install -r requirements-dev.txt
      shell: bash

    - name: Run tests
      run: |
        pytest --cov=ghast ghast/tests/
      shell: bash

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
      shell: bash

    - name: Format code with black
      run: |
        black ghast
      shell: bash

    - name: Commit formatted code
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: format code with black"
          git push
        fi
      shell: bash

    - name: Lint with flake8
      run: |
        flake8 ghast --count --select=E9,F63,F7,F82 --show-source --statistics
      shell: bash

    - name: Type check with mypy
      run: |
        mypy ghast
      shell: bash

  self-check:
    name: Self-check with Ghast
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [test]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install ghast
      run: |
        python -m pip install --upgrade pip
        pip install -e .
      shell: bash

    - name: Run ghast on workflow files
      run: |
        ghast scan . --severity-threshold MEDIUM
      shell: bash

  build-and-publish:
    name: Build and publish Python distributions
    runs-on: ubuntu-latest
    needs: [test, lint, self-check]    
    if: startsWith(github.ref, 'refs/tags/v')
    timeout-minutes: 15
        
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
      shell: bash

    - name: Build package
      run: |
        python -m build
      shell: bash

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@e53eb8b103ffcb59469888563dc324e3c8ba6f06 # v1.8.10
      with:
        user: __token__        
        password: ${{ secrets.PYPI_API_TOKEN }}
